name: (frontend, backend) CI, pnpm lint and testing Workflow

on: [push, pull_request]

permissions:
  contents: read
  pull-requests: write

jobs:
  # job to run change detection
  changes:
    runs-on: ubuntu-22.04
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
  # job to run backend tests
  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version-file: './backend/.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: './backend/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Run lint and format check
        run: |
          pnpm lint
          pnpm format:check
      - name: Run tests
        run: pnpm test
        timeout-minutes: 60
        env:
          PNPM_WORKERS: 3
  # job to run frontend tests
  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version-file: './frontend/.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: './frontend/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Run lint and format check
        run: |
          pnpm lint
          pnpm format:check
      - name: Run tests
        run: pnpm test
        timeout-minutes: 60
        env:
          PNPM_WORKERS: 3
